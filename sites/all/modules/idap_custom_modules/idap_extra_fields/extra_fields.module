<?php

/**
 * Implements hook_field_extra_fields().
 */
function extra_fields_field_extra_fields() {
  $extra = array();
  foreach (node_type_get_types() as $type) {
    $extra['node'][$type->type] = array(
      'display' => array(
        'created' => array(
          'label' => t('Post Date'),
          'weight' => -5,
        ),
        'author' => array(
          'label' => t('Author'),
          'weight' => -3,
        ),
		'read_more' =>array(
			'label' => t('Read More'),
			'weight' => -6,
		),
      ),
    );
    if ($type->has_title) {
      $extra['node'][$type->type]['display']['title'] = array(
        'label' => t('!title (Node Title)', array('!title' => $type->title_label)),
        'weight' => -4,
      );
    }
  }
  return $extra;
}

/**
 * Implements hook_node_view().
 */
function extra_fields_node_view($node, $view_mode, $langcode) {
  $node->content['created'] = array(
    '#theme' => 'extra_fields_created',
    '#node' => $node,
    '#view_mode' => $view_mode
    );
   $node->content['read_more'] = array(
  	'#theme' => 'extra_fields_read_more',
	'#node' => $node,
	'#view_mode' => $view_mode,
  );
  // only return this in a non-full page situation
  if (!in_array($view_mode, array('default', 'full'))) {
    $node->content['title'] = array(
      '#theme' => 'extra_fields_title',
      '#node' => $node,
      '#view_mode' => $view_mode,
    );
  }
  $node->content['author'] = array(
    '#theme' => 'extra_fields_author',
    '#node' => $node,
    '#view_mode' => $view_mode,
  );
}

/**
 * Implements hook_theme().
 */
function extra_fields_theme($existing, $type, $theme, $path) {
  return array(
    'extra_fields_created' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_title' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_author' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
	'extra_fields_read_more' => array(
		'variables' => array('node' => NULL, 'view_mode' => NULL),
	),
  );
}

function theme_extra_fields_created($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $output = '<div class="node-created">';
  $output .= date('F j, Y', $node->created);
  $output .= '</div>';
  return $output;
}

function theme_extra_fields_title($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $entity_uri = entity_uri('node', $node);
  $output = '<h3 class="node-title">';
  $output .= l($node->title, $entity_uri['path']);
  $output .= '</h3>';
  return $output;
}

function theme_extra_fields_author($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $user = user_load($node->uid);
  $output = '<div class="node-author">';
	if (!empty($user->profile_full_name)) {
		$output .= $user->profile_full_name;
	} else {
		$output .= $user->name;
	}
  $output .= '</div>';
  return $output;
}

function theme_extra_fields_read_more($variables) {
	$node = $variables['node'];
	$view_mode = $variables['view_mode'];
	$entity_uri = entity_uri('node', $node);
	$output = l('Read More >', $entity_uri['path']);
	return $output;
}

/**
 * Implements hook_entity_info_alter().
 */
/* function extra_fields_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes'] += array(
    'subtitle_teaser' => array(
      'label' => t('Subtitle Teaser'),
      'custom settings' => TRUE,
    ),
  );
} */

/* Features implementation for exporting extra fields information */

/**
 * Implements hook_features_api.
 */
function extra_fields_features_api() {
  return array(
    'extra_fields' => array(
      'name' => t('Extra fields'),
      'default_hook' => 'extra_fields_info',
      'default_file' => FEATURES_DEFAULTS_INCLUDED,
      'features_source' => TRUE,
      'file' => drupal_get_path('module', 'extra_fields') .'/extra_fields.features.inc',
    ),
  );
}



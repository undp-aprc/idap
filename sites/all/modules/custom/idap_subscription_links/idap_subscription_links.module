<?php

/* Implements hook_menu() */
function idap_subscription_links_menu() {
	$items = array();
	$items['node/%node/%/subscribe'] = array(
		'page callback' => 'idap_subscription_links_subscribe',
	    'page arguments' => array(1, 2),
	    'access arguments' => array('subscribe to content types'),
	    'delivery callback' => 'ajax_deliver',
	    'type' => MENU_CALLBACK,
	);
	$items['node/%node/%/unsubscribe'] = array(
		'page callback' => 'idap_subscription_links_unsubscribe',
	    'page arguments' => array(1, 2),
	    'access arguments' => array('subscribe to content types'),
	    'delivery callback' => 'ajax_deliver',
	    'type' => MENU_CALLBACK,
	);
	
	return $items;
}

function idap_subscription_links_page_alter(&$page) {
	drupal_add_js('misc/ajax.js', array('weight' => JS_LIBRARY + 2));
	drupal_add_css(drupal_get_path('module', 'idap_subscription_links').'/idap_subscription_links.css');
	if ($nodes = $page['content']['system_main']['nodes']) {
		if($nodes) {
			foreach($nodes as $nid=>$node) {
				if(is_integer($nid)) {
					$page['content']['system_main']['nodes'][$nid]['links']['subscription'] = idap_subscription_links_build($nid);
				}
			}
		}
	}
}

function idap_subscription_links_build($nid) {
	$links = array();
	global $user;
	if ($user->uid != 0) { // Only if user is logged in
		$node = node_load($nid);
		$node_type = node_type_get_type($node)->name;
		if (subscription_exists($node->type, $user->uid)) {
			$links['subscription-links'] = array(
				'#theme' => 'link',
				'#text' => t('Unsubscribe from all '.$node_type.'s'),
				'#path' => 'node/'.$nid.'/'.$node->type.'/unsubscribe/nojs',
				'#options' => array(
					'html' => FALSE,
					'attributes' => array(
						'class' => array('links','inline','use-ajax','subscription-link','unsubscribe-link'),
					),
				)
			);
		} else { // No subscription
			$links['subscription-links'] = array(
				'#theme' => 'link',
				'#text' => t('Subscribe to all '.$node_type.'s'),
				'#path' => 'node/'.$nid.'/'.$node->type.'/subscribe/nojs',
				'#options' => array(
					'html' => FALSE,
					'attributes' => array(
						'class' => array('links','inline','use-ajax','subscription-link','subscribe-link'),
					),
				),
			);
		}
	} else { // User is not logged in
		$links['subscription-links'] = array(
			'title' => t('Log in or register to subscribe'),
			'href' => 'user',
			'html' => FALSE,
			'attributes' => array(
				'class' => array('links','inline'),
			),
		);
	}
	return $links;
}

/**
 * Menu callback for node/%node/subscribe/type/%/add
 */
function idap_subscription_links_subscribe($node, $type = NULL, $mode = NULL) {
	global $user;
  	$nid = $node->nid;
  	$type = $node->type;
  
  	// If the mode is not AJAX, redirect to the normal view of the page.
  	if ($mode != 'ajax') {
    	// Important TO DO: URL for subscription form
  	} else {
		
		subscriptions_write_subscription('node','type',$type,-1,$user->uid,1,1,1);
		
		$link = idap_subscription_links_build($nid);
		$html = render($link);
		
		$commands = array();
		
		$commands[] = ajax_command_remove('.subscription-link');
	  	$commands[] = ajax_command_html('.link-wrapper', $html);

	  	return array(
	    	'#type' => 'ajax',
	    	'#commands' => $commands,
	  	);
  	}
}

/**
 * Menu callback for node/%node/subscribe/type/%/delete
 */
function idap_subscription_links_unsubscribe($node, $type = NULL, $mode = NULL) {
	global $user;
	$nid = $node->nid;
	$type = $node->type;
	
  	// If the mode is not AJAX, redirect to the normal view of the page.
  	if ($mode != 'ajax') {
    	// Important TO DO: URL for subscription form
  	} else {
		$query = db_delete('subscriptions')
					->condition('field','type')
					->condition('value',$node->type)
					->condition('recipient_uid',$user->uid)
					->execute();
		
		$link = idap_subscription_links_build($nid);
		$html = render($link);

		$commands = array();
		$commands[] = ajax_command_remove('.subscription-link');
		$commands[] = ajax_command_html('.link-wrapper', $html);

		return array(
		  	'#type' => 'ajax',
		    '#commands' => $commands,
		);
	}
}

function subscription_exists($type, $uid) {
	$query = db_query('SELECT * FROM {subscriptions} s WHERE s.field = :subscription_type AND s.recipient_uid = :uid AND s.value = :type',array(':subscription_type'=>'type',':uid'=>$uid,':type'=>$type));
	return $query->rowCount() ? TRUE : FALSE;
}